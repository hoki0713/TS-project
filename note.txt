<What Is TypeScript?>

- A JavaScript Superset
- A Language building up on JavaScript
- Adds new Features + Advantages to JavaScript
- But browser can't execute TypeScript
- TypeScript will be compiled to JavaScript



<Why TypeScript?>

in JavaScript

function add(num1, num2) {
    return num1 + num2;
}

console.log(add('2','3'));
Unwanted Behavior at Runtime...
TypeScript is a 'Tool' that helps developers write better code.


<Core Types>

- number : 1, 5.3, -10... All numbers, no differentiation between integers or floats
- string : 'Hi', "Hi", `Hi`... All text values
- boolean : true, false... Just these two. no "truthy" or "falsy" values
- object: {age: 30}... Any JavaScript object, more specific types(type of object) are possible 
  object types can be created for nested objects.
  ex)
  const product = {
    id: 'abc',
    price: 12.99,
    tags: ['greate-offer', 'hot-and-new'],
    details: {
      title: 'Red Carpet',
      description: 'A greate carpet - almost brand-new!'
    }
  }
  
  ------
  type of object
  {
    id: string;
    price: number;
    tags: string[];
    details: {
      title: string;
      description: string;
    }
  }


- Array: [1,2,3]... Any JavaScript array, type can be flexible or strict (regarding the element types) 
- Tuple: [1,2]... Added by TypeScript: Fixed-length-array
- Enum: enum { NEW, OLD }... Added by TypeScript: Automatically enumerated global constant identifiers

** JavaScript VS TypeScript **
- The key difference is: JavaScript uses "dynamic types" (resolved at runtime). TypeScript uses "static types" (set during development).


[Tip!]
- The core primitive types in TypeScript are all lowercase!
string(o) String(x) number(o) Number(x)
